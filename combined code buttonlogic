// Define the pin numbers for the buttons
#include <ESP32Servo.h>

Servo myservo;

#define BUTTON1_PIN 17  // the first button " - "
#define BUTTON2_PIN 16  // the 2nd button "confirm "
#define BUTTON3_PIN 19  // the 3rd button " + "
#define BUTTON4_PIN 14  // the 4th button "reset" + "cleanig"
int servoPin = 21;

int pos = 0;
int modcheck = 0; // 0 as the server, 1 as personal
int cupnum = 1;
int defaultrot = 3; // lets say 3 is the default for 2table spoon
int totalrot; // total rotation mulipled default * cupnum
float TS = 2;
int grindready =0;

void setup() {
  // Initialize serial communication at 9600 baud rate
  Serial.begin(115200);
  ESP32PWM :: allocateTimer(0);
  ESP32PWM :: allocateTimer(1);
  ESP32PWM :: allocateTimer(2);
  ESP32PWM :: allocateTimer(3);
  myservo.setPeriodHertz(50);
  myservo.attach(servoPin, 400,2400);
 
  // Set the button pins as inputs with pullup resistor enabled
  pinMode(BUTTON1_PIN, INPUT_PULLUP);
  pinMode(BUTTON2_PIN, INPUT_PULLUP);
  pinMode(BUTTON3_PIN, INPUT_PULLUP);
}
// button 1 is minus also mode 1
// button 2 is confirm
// button 3 is plus  also mode 3
void loop() {
  
  Serial.println(modcheck);

  // Check if Button 1 is pushed
  if (digitalRead(BUTTON1_PIN) == LOW) {
    // Print a message to the serial monitor
    Serial.println("Button 1 is pushed!");
    modcheck = 1; // one for the personal
    delay(300); // Add a delay to debounce the button
  }

  // Check if Button 3 is pushed
  if (digitalRead(BUTTON3_PIN) == LOW) {
    // Print a message to the serial monitor
    Serial.println("Button 3 is pushed!");
    modcheck = 3;  // 3 for the modification
    delay(300); // Add a delay to debounce the button
  }

  if (digitalRead(BUTTON4_PIN) == LOW) {
    // Print a message to the serial monitor
    delay(300); // Add a delay to debounce the button
    Serial.println("Button 4 is pushed!");
    if (digitalRead(BUTTON4_PIN) == LOW) {
      // Print a message to the serial monitor
      Serial.println("cleaning");
      for(int i=0; i < 3 ; i +=1 ){
        myservo.write(200);
        delay(400);
        myservo.write(20);
        delay(400);
      }
      delay(300); // Add a delay to debounce the button
    }
    delay(300);
  }
  // Check if Button 2 is pushed meaning the confirm is pressed after choosing the mode
  if (digitalRead(BUTTON2_PIN) == LOW) {
    delay(300);
    while (true){
      Serial.println("showing screen 2, current cups of coffee = " + String(cupnum));
      if (digitalRead(BUTTON1_PIN) == LOW){
        cupnum -= 1;  // button 1 for minus
        if (cupnum <1){
          cupnum = 1;
        }
        delay(300);
      }
      if (digitalRead(BUTTON3_PIN) == LOW){
        cupnum += 1;  // button 3 for plus
        if (cupnum>5){
          cupnum =5;
        }
        delay(300);
      }
      if (digitalRead(BUTTON4_PIN) == LOW){
        break;
        break;
      }

      if (digitalRead(BUTTON2_PIN) == LOW){
        delay(300);
        if (modcheck == 1){
          Serial.println("screen 3.1 - turn on the switch for brewing"); // showing turn on switch for the personal coffee
          delay(300);
          if (digitalRead(BUTTON4_PIN) == LOW){
            break;
            break;
          }
          grindready = 1;
        }
        else if (modcheck == 3){
          while (true) {
            Serial.println("screen 3.2 + showing # of tablespoon" + String(TS));
            if (digitalRead(BUTTON1_PIN) == LOW){
              TS -= 0.5;
              if (TS < 1){
                TS = 1;
              }              
              delay(300);
            }
            if (digitalRead(BUTTON3_PIN) == LOW){
              TS += 0.5;
              if (TS > 8){
                TS = 8;
              }
              delay(300);
            }
            if (digitalRead(BUTTON4_PIN) == LOW){
              break;
              break;
            }
            if (digitalRead(BUTTON2_PIN) == LOW){
              break;
            }
          }
          grindready = 1;
        }

      }
      if (grindready == 1){
        break;
      }
    }
    if (grindready == 1){
      Serial.print("grindmotor code");
      grindready = 0; 
      delay(4000);
    }




    delay(300);
  }
  
}
